//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Server.CurrencyConverter
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="NumberPresentationResult", Namespace="http://schemas.datacontract.org/2004/07/Server.CurrencyConverter")]
    public partial class NumberPresentationResult : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string ErrorMessageField;
        
        private string NumberField;
        
        private bool SuccessField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number
        {
            get
            {
                return this.NumberField;
            }
            set
            {
                this.NumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Success
        {
            get
            {
                return this.SuccessField;
            }
            set
            {
                this.SuccessField = value;
            }
        }
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="ICurrencyConverterService")]
public interface ICurrencyConverterService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyConverterService/GetNumberPresentation", ReplyAction="http://tempuri.org/ICurrencyConverterService/GetNumberPresentationResponse")]
    Server.CurrencyConverter.NumberPresentationResult GetNumberPresentation(string value);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICurrencyConverterService/GetNumberPresentation", ReplyAction="http://tempuri.org/ICurrencyConverterService/GetNumberPresentationResponse")]
    System.Threading.Tasks.Task<Server.CurrencyConverter.NumberPresentationResult> GetNumberPresentationAsync(string value);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface ICurrencyConverterServiceChannel : ICurrencyConverterService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class CurrencyConverterServiceClient : System.ServiceModel.ClientBase<ICurrencyConverterService>, ICurrencyConverterService
{
    
    public CurrencyConverterServiceClient()
    {
    }
    
    public CurrencyConverterServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public CurrencyConverterServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CurrencyConverterServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public CurrencyConverterServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public Server.CurrencyConverter.NumberPresentationResult GetNumberPresentation(string value)
    {
        return base.Channel.GetNumberPresentation(value);
    }
    
    public System.Threading.Tasks.Task<Server.CurrencyConverter.NumberPresentationResult> GetNumberPresentationAsync(string value)
    {
        return base.Channel.GetNumberPresentationAsync(value);
    }
}
